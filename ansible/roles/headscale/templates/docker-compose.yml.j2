services:
  headscale:
    image: headscale/headscale:{{ headscale_version }}
    container_name: headscale
    restart: unless-stopped
    environment:
      - TZ={{ project_timezone }}
    volumes:
      - "{{ headscale_host_acl_path }}:/etc/headscale/acl.json:ro"
      - "{{ headscale_host_key_path }}:/etc/headscale/noise_private.key:ro"
      - "{{ headscale_host_db_path }}:/var/lib/headscale/db.sqlite"
    entrypoint: headscale serve
    networks:
      - pangolin
    labels:
      traefik.enable: "true"
      traefik.docker.network: "pangolin"
      traefik.http.routers.headscale.rule: Host(`headscale.{{ project_domain }}`)
      traefik.http.routers.headscale.entrypoints: https
      traefik.http.routers.headscale.tls.certresolver: cloudflare
      traefik.http.routers.headscale.service: headscale
      traefik.http.services.headscale.loadbalancer.server.port: 8080
      traefik.http.services.headscale.loadbalancer.server.scheme: http

  headscale-admin:
    image: goodieshq/headscale-admin:0.25
    container_name: headscale-admin
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - pangolin
    labels:
      traefik.enable: "true"
      traefik.docker.network: "pangolin"
      traefik.http.routers.headscale-admin.rule: Host(`headscale.{{ project_domain }}`) && PathPrefix(`/admin`)
      traefik.http.routers.headscale-admin.entrypoints: https
      traefik.http.routers.headscale-admin.tls.certresolver: cloudflare
      traefik.http.services.headscale-admin.loadbalancer.server.port: 80
      traefik.http.services.headscale-admin.loadbalancer.server.scheme: http

networks:
  pangolin:
    external: true
